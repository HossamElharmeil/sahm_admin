{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/trips/Trip.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","Trip","match","history","useHistory","dispatch","useDispatch","useEffect","getTrip","params","id","trip","useSelector","state","tripDetails","entries","className","map","index","key","onClick","toString"],"mappings":"2NAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,+GI8DvFC,UA3DF,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACRC,EAAUC,cACVC,EAAWC,cAEjBC,qBAAU,WACRF,EAASG,YAAQN,EAAMO,OAAOC,OAC7B,CAACL,EAAUH,IAEd,IAAMS,EAAOC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,QAElCG,EAAcH,EAAO1B,OAAO8B,QAAQJ,GACxC,CAAC,CAAC,KAAO,iCAAM,cAAC,IAAD,CAAOK,UAAU,eAAvB,kBAEX,OACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,uBACYd,EAAMO,OAAOC,MAEzB,cAAC,IAAD,UACI,uBAAOM,UAAU,kCAAjB,SACE,gCAEEF,EAAYG,KAAI,WAAeC,GAAW,IAAD,mBAAvBC,EAAuB,KAAlBvB,EAAkB,KACvC,MAAY,cAARuB,EAEA,qBAA2BC,QAAS,kBAAMjB,EAAQR,KAAR,mBAAyBC,KAAnE,UACE,uCAAQuB,EAAR,OACA,6BAAI,iCAASvB,QAFNsB,EAAMG,YAMF,SAARF,EAEL,qBAA2BC,QAAS,kBAAMjB,EAAQR,KAAR,iBAAuBC,KAAjE,UACE,uCAAQuB,EAAR,OACA,6BAAI,iCAASvB,QAFNsB,EAAMG,YAQf,+BACE,uCAAQF,EAAR,OACA,6BAAI,iCAASvB,QAFNsB,EAAMG","file":"static/js/9.d1fbd23d.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useEffect } from 'react'\nimport { CCard, CCardBody, CCardHeader, CCol, CRow } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getTrip } from 'src/redux/actions'\nimport { useHistory } from 'react-router'\n\nconst Trip = ({ match }) => {\n  const history = useHistory()\n  const dispatch = useDispatch()\n  \n  useEffect(() => {\n    dispatch(getTrip(match.params.id))\n  }, [dispatch, match])\n\n  const trip = useSelector(state => state.trip)\n\n  const tripDetails = trip ? Object.entries(trip) : \n    [['id', (<span><CIcon className=\"text-muted\" /> Not found</span>)]]\n\n  return (\n    <CRow>\n      <CCol>\n        <CCard>\n          <CCardHeader>\n            Trip id: {match.params.id}\n          </CCardHeader>\n          <CCardBody>\n              <table className=\"table table-striped table-hover\">\n                <tbody>\n                  {\n                  tripDetails.map(([key, value], index) => {\n                    if (key === 'captainId') {\n                        return (\n                        <tr key={index.toString()} onClick={() => history.push(`/drivers/${value}`)}>\n                          <td>{`${key}:`}</td>\n                          <td><strong>{value}</strong></td>\n                        </tr>\n                      )\n                    }\n                    else if (key === 'user') {\n                        return (\n                        <tr key={index.toString()} onClick={() => history.push(`/users/${value}`)}>\n                          <td>{`${key}:`}</td>\n                          <td><strong>{value}</strong></td>\n                        </tr>\n                      )\n                    }\n                    else\n                      return (\n                        <tr key={index.toString()}>\n                          <td>{`${key}:`}</td>\n                          <td><strong>{value}</strong></td>\n                        </tr>\n                      )\n                    })\n                  }\n                </tbody>\n              </table>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default Trip\n"],"sourceRoot":""}